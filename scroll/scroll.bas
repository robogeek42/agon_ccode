10 MODE 8
12 SW%=320 : SH%=240 : SWT%=SW%/16 : SHT%=SH%/16
15 VDU 23,0,192,0,23,1,0 : REM unset logical draw and turn off cursor
20 PROCloadImages
30 PRINT"done"
35 CLS
40 REM PROCshowImages
60 MW%=30 : MH%=30 : REM Map width and height
70 XPOS%=80:YPOS%=80 : REM Position of top-left of screen in world coords (pixel)
75 SPEED%=2
80 DIM map%(MH%,MW%)
90 PROCloadmap(MW%, MH%)

100 PROCdrawscreen
120 ISEXIT=0
130 REM game loop
140 REPEAT
150 key=INKEY(0)
160 IF key = ASC("x") OR key=ASC("X") ISEXIT=1 : REM x=exit
170 IF key=8 THEN  PROCscrollLeft : REM left
180 IF key=21 THEN PROCscrollRight : REM right
190 IF key=11 THEN PROCscrollUp : REM up
200 IF key=10 THEN PROCscrollDown : REM down

300 UNTIL ISEXIT=1

990 VDU 23,0,192,1,23,1,1 : REM restore cursor and logical drawing
999 END

1000 DEF PROCloadImages
1010 FOR I%=1 TO 18
1020 F$ = "terr16/ts"+RIGHT$( "000"+STR$(I%) ,2)+".rgb2"
1040 FHAN%=OPENIN(F$)
1050 IF FHAN% = 0 THEN PRINT "failed to open "+F$ : END
1055 PRINT "Load "+F$
1060 PROCloadBitmapRGB2(FHAN%, I%, 16, 16)
1065 CLOSE#FHAN%
1070 NEXT
1090 ENDPROC

1200 DEF PROCloadBitmapRGB2(FHAN%, BM%, W%, H%)
1210 LOCAL BUFID%, I%
1220 BUFID%=&FA00 + BM%
1230 VDU 23,0,&A0,BUFID%;2 : REM adv bufffer cmd 2 = Clear
1240 VDU 23,0,&A0,BUFID%;0,W%*H%; : REM adv buffer cmd 0 Write Block.
1260 FOR I%=0 TO W%*H%-1 : VDU BGET#FHAN% : NEXT I%
1300 REM create bitmap from buffer
1310 VDU 23,27,0,BM% : REM select bitmap (buffer &FA00+BM%)
1320 VDU 23,27,&21,W%;H%;1 : REM create bitmap from buffer format 1
1330 ENDPROC

1500 DEF PROCshowImages
1505 LOCAL X%,Y%
1507 VDU 5 : REM write text at graphics cursor
1510 FOR I%=1 TO 18
1530 VDU 23,27,0,I%
1540 X% = 20 + (I% MOD 10) * 20
1545 Y% = 40 + (I% DIV 10) * 40
1550 VDU 23,27,3,X%;Y%;
1560 MOVE X%,Y%-10 : PRINT STR$(I%);
1570 NEXT
1580 VDU 4 : REM write text at text cursor
1590 ENDPROC

1700 DEF PROCloadmap(w%,h%)
1710 LOCAL x%,y%
1715 RESTORE 3000
1720 FOR y%=0 TO h%-1
1730 FOR x%=0 TO w%-1
1740 READ map%(y%,x%)
1750 NEXT
1780 NEXT
1790 ENDPROC

1800 DEF PROCdrawrow(tx%, ty%, len%)
1810 LOCAL px%, py%, i%
1820 px%=(tx% * 16) - XPOS%
1825 py%=(ty% * 16) - YPOS%
1830 FOR i%=0 TO len%-1 
1840 VDU 23,27,0,map%(ty%, tx%+i%)
1850 VDU 23,27,3, (px% + i%*16); py%;
1860 NEXT i%
1890 ENDPROC

1900 DEF PROCdrawcol(tx%, ty%, len%)
1910 LOCAL px%, py%, i%
1920 px%=(tx% * 16) - XPOS%
1925 py%=(ty% * 16) - YPOS%
1930 FOR i%=0 TO len%-1 
1940 VDU 23,27,0,map%(ty%+i%, tx%)
1950 VDU 23,27,3, px%; py% + i%*16;
1960 NEXT i%
1990 ENDPROC

2000 DEF PROCdrawscreen
2010 LOCAL tx%, ty%, i%
2020 tx%=XPOS%/16 : ty%=YPOS%/16
2030 FOR i%=0 TO SHT%
2040 PROCdrawrow(tx%, ty%+i%, 1+SWT%)
2050 NEXT i%
2090 ENDPROC

2100 DEF PROCscrollRight
2110 IF XPOS% < SPEED% THEN ENDPROC
2130 XPOS% = XPOS% - SPEED%
2150 VDU 23,7,1,0,SPEED%
2160 PROCdrawcol( XPOS%/16, YPOS%/16, 1+SHT%)
2170 ENDPROC

2200 DEF PROCscrollLeft
2220 IF (XPOS%+SW%+SPEED%) >= MW%*16 THEN ENDPROC
2230 XPOS%=XPOS% + SPEED%
2250 VDU 23,7,1,1,SPEED%
2260 PROCdrawcol( (XPOS% + SW% -1)/16, YPOS%/16, 1+SHT%)
2270 ENDPROC

2300 DEF PROCscrollUp
2320 IF YPOS% < SPEED% THEN ENDPROC
2330 YPOS%=YPOS%-SPEED%
2350 VDU 23,7,1,2,SPEED%
2360 PROCdrawrow(XPOS%/16, YPOS%/16, 1+SWT%)
2370 ENDPROC

2400 DEF PROCscrollDown
2410 IF (YPOS% + SH% + SPEED%) >= MH%*16 THEN ENDPROC
2430 YPOS%=YPOS%+SPEED%
2450 VDU 23,7,1,3,SPEED%
2460 PROCdrawrow(XPOS%/16, (YPOS%+SH%-1)/16, 1+SWT%)
2470 ENDPROC

2999 REM data for a tile map 28x28 16x16 tiles
3000 DATA 1,1,1,1,1,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,18,1,1,1,1,1,1,1,1,1
3010 DATA 1,1,1,1,18,1,18,18,1,1,17,1,18,1,1,1,1,1,1,18,1,18,18,1,1,17,1,18,1,1
3020 DATA 1,1,17,18,18,1,1,1,18,1,1,1,17,18,1,1,1,17,18,18,1,1,1,18,1,1,1,17,18,1
3030 DATA 1,1,12,5,5,5,5,5,5,13,1,18,18,1,1,1,1,12,5,5,5,5,5,5,13,1,18,18,1,1
3040 DATA 1,1,2,10,10,10,10,10,10,3,1,1,1,1,1,1,1,2,10,10,10,10,10,10,3,1,1,1,1,1
3050 DATA 1,1,11,6,10,10,10,10,10,3,1,1,1,1,1,1,1,11,6,10,10,10,10,10,3,1,1,1,1,1
3060 DATA 1,1,1,2,10,10,10,10,9,14,1,17,1,1,1,1,1,1,2,10,10,10,10,9,14,1,17,1,1,1
3070 DATA 1,1,1,2,10,10,10,10,3,1,1,1,1,18,1,1,1,1,2,10,10,10,10,3,1,1,1,1,18,1
3080 DATA 1,1,1,11,6,10,10,9,14,1,1,1,1,17,18,1,1,1,11,6,10,10,9,14,1,1,1,1,17,18
3090 DATA 1,1,1,1,2,10,10,3,1,12,13,1,1,1,1,1,1,1,1,2,10,10,3,1,12,13,1,1,1,1
3100 DATA 1,18,1,1,11,4,4,14,1,11,16,5,5,5,13,1,18,1,1,11,4,4,14,1,11,16,5,5,5,13
3110 DATA 1,18,18,1,1,1,1,1,1,1,2,10,10,10,3,1,18,18,1,1,1,1,1,1,1,2,10,10,10,3
3120 DATA 1,17,1,18,18,1,1,1,1,18,11,4,6,10,3,1,17,1,18,18,1,1,1,1,18,11,4,6,10,3
3130 DATA 1,1,1,17,1,1,1,17,1,1,18,18,11,4,14,1,1,1,17,1,1,1,17,1,1,18,18,11,4,14
3140 DATA 1,1,1,1,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,1,1,1,1,1,1,1,1,1,1
4000 DATA 1,1,1,1,1,18,1,1,1,1,1,1,1,1,1,1,1,1,1,1,18,1,1,1,1,1,1,1,1,1
4010 DATA 1,1,1,1,18,1,18,18,1,1,17,1,18,1,1,1,1,1,1,18,1,18,18,1,1,17,1,18,1,1
4020 DATA 1,1,17,18,18,1,1,1,18,1,1,1,17,18,1,1,1,17,18,18,1,1,1,18,1,1,1,17,18,1
4030 DATA 1,1,12,5,5,5,5,5,5,13,1,18,18,1,1,1,1,12,5,5,5,5,5,5,13,1,18,18,1,1
4040 DATA 1,1,2,10,10,10,10,10,10,3,1,1,1,1,1,1,1,2,10,10,10,10,10,10,3,1,1,1,1,1
4050 DATA 1,1,11,6,10,10,10,10,10,3,1,1,1,1,1,1,1,11,6,10,10,10,10,10,3,1,1,1,1,1
4060 DATA 1,1,1,2,10,10,10,10,9,14,1,17,1,1,1,1,1,1,2,10,10,10,10,9,14,1,17,1,1,1
4070 DATA 1,1,1,2,10,10,10,10,3,1,1,1,1,18,1,1,1,1,2,10,10,10,10,3,1,1,1,1,18,1
4080 DATA 1,1,1,11,6,10,10,9,14,1,1,1,1,17,18,1,1,1,11,6,10,10,9,14,1,1,1,1,17,18
4090 DATA 1,1,1,1,2,10,10,3,1,12,13,1,1,1,1,1,1,1,1,2,10,10,3,1,12,13,1,1,1,1
4100 DATA 1,18,1,1,11,4,4,14,1,11,16,5,5,5,13,1,18,1,1,11,4,4,14,1,11,16,5,5,5,13
4110 DATA 1,18,18,1,1,1,1,1,1,1,2,10,10,10,3,1,18,18,1,1,1,1,1,1,1,2,10,10,10,3
4120 DATA 1,17,1,18,18,1,1,1,1,18,11,4,6,10,3,1,17,1,18,18,1,1,1,1,18,11,4,6,10,3
4130 DATA 1,1,1,17,1,1,1,17,1,1,18,18,11,4,14,1,1,1,17,1,1,1,17,1,1,18,18,11,4,14
4140 DATA 1,1,1,1,17,1,1,1,1,1,1,1,1,1,1,1,1,1,1,17,1,1,1,1,1,1,1,1,1,1


